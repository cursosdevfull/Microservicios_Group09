version: "3.8"

services:
  mongo:
    image: mongo:3.6
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - vol-mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: test
    networks:
      - net-mongo
  client-mongo:
    image: mongo-express
    container_name: client-mongo
    restart: always
    ports:
      - 8100:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
    depends_on:
      - mongo
    networks:
      - net-mongo

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - net-mongo

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BASE_DIR=.
    container_name: app
    ports:
      - 4900:3000
    restart: always
    environment:
      - PORT=3000
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=root
      - MONGO_DATABASE=test
      - MONGO_HOST=mongo
      - MONGO_AUTH_SOURCE=admin
      - MONGO_PORT=27017
      - NODE_ENV=dev
      - RABBIT_HOST=rabbitmq:5672
      - EXCHANGE_NAME=test
      - EXCHANGE_NAME_DLQ=test-dlq
      - ROUTING_KEY_DLQ=test-dlq
    networks:
      - net-mongo
    depends_on:
      - mongo
      - rabbitmq
volumes:
  vol-mongo:

networks:
  net-mongo:
    name: net-mongo
